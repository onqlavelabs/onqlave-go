name: Publish Production
on:
  push:
    tags:
      - 'v0.1.*'
  pull_request:
    branches:
      - main

jobs:
  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && endsWith(github.event.base_ref, '/main')
    strategy:
      matrix:
        go-version: [1.20.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checking out the code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Go version
        run: go version

      - name: Cache go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: go build -v ./...

      - name: Run golint
        uses: golangci/golangci-lint-action@v3

      - name: Run tests
        run: go test -race -vet=off `go list ./... | grep -v test | grep -v vendor`

      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1

      - name: Extract tag version
        id: extract_tag
        run: echo "##[set-output name=version;]${GITHUB_REF#$"refs/tags/v"}"

      ############# GITHUB RELEASE ##############
      - name: "Create a GitHub release v${{ steps.extract_tag.outputs.version }}"
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ steps.extract_tag.outputs.version }}"
          name: "Release v${{ steps.extract_tag.outputs.version }}"
          body: |
            ## Release notes:
            ${{ steps.extract-release-notes.outputs.release_notes }}

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: always()
        env:
          SLACK_CHANNEL: ci-notification
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_TITLE: publish (onqlave-go)
          SLACK_USERNAME: ci-bot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}